<?xml version="1.0"?>
<module id="trails" version="1.0.0">

	<implementation service-id="trails.core.DescriptorService">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="descriptorService"/>
		</invoke-factory>
	</implementation>

	<implementation service-id="trails.core.PersistenceService">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="persistenceService"/>
		</invoke-factory>
	</implementation>

	<implementation service-id="trails.hibernate.PersistenceService">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="persistenceService"/>
		</invoke-factory>
	</implementation>

	<implementation service-id="trails.core.EditorService">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="editorService"/>
		</invoke-factory>
	</implementation>

	<implementation service-id="trails.core.ViewerService">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="viewerService"/>
		</invoke-factory>
	</implementation>

	<implementation service-id="trails.core.MessageSource">
		<invoke-factory service-id="hivemind.lib.SpringLookupFactory">
			<lookup-bean name="trailsMessageSource"/>
		</invoke-factory>
	</implementation>

	<contribution configuration-id="tapestry.url.ServiceEncoders">
		<page-service-encoder id="page" extension="page" service="page"/>
		<direct-service-encoder id="direct" stateless-extension="direct" stateful-extension="sdirect"/>
		<asset-encoder id="asset" path="/assets"/>
		<extension-encoder id="extension" extension="svc" after="*"/>
	</contribution>

	<contribution configuration-id="tapestry.InfrastructureOverrides">
		<property name="exceptionPresenter" object="service:trails.core.ApplicationExceptionPresenter"/>
		<property name="exceptionPageName" value="DefaultException"/>
	</contribution>

	<contribution configuration-id="tapestry.persist.PersistenceStrategy">
		<strategy name="trails-entity" object="service:trails.hibernate.ReattachReattachPropertyPersistenceStrategy"/>
		<strategy name="trails-default" object="service:tapestry.persist.SessionPropertyPersistenceStrategy"/>
		<strategy name="trails-form" object="service:tapestry.persist.SessionPropertyPersistenceStrategy"/>
	</contribution>

	<contribution configuration-id="tapestry.state.ApplicationObjects">
		<state-object name="callbackStack" scope="session">
			<create-instance class="org.trails.callback.CallbackStack"/>
		</state-object>
	</contribution>

<!--	<service-point id="CallbackStackAdaptor" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.CallbackStackAdaptor"/>
		</invoke-factory>
	</service-point>

	<service-point id="PropertyChangeAdaptor" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.PropertyChangeAdaptor"/>
		</invoke-factory>
	</service-point>

	<service-point id="EntitySqueezerAdaptor" interface="org.apache.tapestry.util.io.SqueezeAdaptor">
		<invoke-factory>
			<construct class="org.trails.io.EntitySqueezerStrategy">
				<set property="prefix" value="U"/>
				<set property="delimiter" value=":"/>
				<set-object property="persistenceService" value="service:trails.core.DefaultPersistenceService"/>
				<set-object property="descriptorService" value="service:trails.core.DefaultDescriptorService"/>
			</construct>
		</invoke-factory>
	</service-point>

	<implementation service-id="tapestry.persist.PersistentPropertyDataEncoder">
		<invoke-factory>
			<construct class="org.trails.record.SqueezerDataEncoder">
				<set-object property="dataSqueezer" value="service:tapestry.data.DataSqueezer"/>
			</construct>
		</invoke-factory>
	</implementation>

	<service-point id="FormClientPropertyPersistenceScope"
				   interface="org.apache.tapestry.record.ClientPropertyPersistenceScope">
		<invoke-factory>
			<construct class="org.trails.record.FormClientPropertyPersistenceScope">
				<set-object property="requestCycle" value="infrastructure:requestCycle"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="FormClientPropertyPersistenceStrategy"
				   interface="org.apache.tapestry.record.PropertyPersistenceStrategy">
		<invoke-factory model="threaded">
			<construct class="org.trails.record.FormClientPropertyPersistenceStrategy">
				<set-object property="request" value="infrastructure:request"/>
				<set-object property="scope" value="service:FormClientPropertyPersistenceScope"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="ClientAsoPropertyPersistenceStrategy"
				   interface="org.trails.record.IClientAsoPropertyPersistenceStrategy">
		<invoke-factory model="threaded">
			<construct class="org.trails.record.ClientAsoPropertyPersistenceStrategy">
				<set-object property="request" value="infrastructure:request"/>
				<set-object property="dataSqueezer" value="service:tapestry.data.DataSqueezer"/>
			</construct>
		</invoke-factory>
	</service-point>

	<service-point id="RequestScopeManager" interface="org.apache.tapestry.engine.state.StateObjectPersistenceManager">
		<invoke-factory>
			<construct class="org.trails.engine.state.RequestScopeManager">
				<set-object property="request" value="infrastructure:request"/>
				<set-object property="dataSqueezer" value="service:tapestry.data.DataSqueezer"/>
				<set-object property="clientAsoPropertyPersistenceStrategy"
							value="service:ClientAsoPropertyPersistenceStrategy"/>
			</construct>
		</invoke-factory>
	</service-point>

	<contribution configuration-id="tapestry.state.ApplicationObjects">
		<state-object name="callbackStack" scope="aso">
			<create-instance class="org.trails.callback.CallbackStack"/>
		</state-object>
	</contribution>

	<contribution configuration-id="tapestry.persist.PersistenceStrategy">
		<strategy name="client:form" object="service:FormClientPropertyPersistenceStrategy"/>
		<strategy name="client:aso" object="service:ClientAsoPropertyPersistenceStrategy"/>
	</contribution>

	<contribution configuration-id="tapestry.state.StateObjectPersistenceManagers">
		<manager scope="aso" object="service:RequestScopeManager"/>
	</contribution>

	<contribution configuration-id="tapestry.data.SqueezeAdaptors">
		<adaptor object="service:PropertyChangeAdaptor"/>
		<adaptor object="service:EntitySqueezerAdaptor"/>
		<adaptor object="service:CallbackStackAdaptor"/>
	</contribution>

	<contribution configuration-id="tapestry.persist.PersistenceStrategy">
		<strategy name="trails-entity" object="service:FormClientPropertyPersistenceStrategy"/>
		<strategy name="trails-default" object="service:tapestry.persist.PageClientPropertyPersistenceStrategy"/>
		<strategy name="trails-form" object="service:FormClientPropertyPersistenceStrategy"/>
	</contribution>-->

	<implementation service-id="trails.core.AddNewLinkRenderer">
		<invoke-factory>
			<construct class="org.apache.tapestry.link.DefaultLinkRenderer"/>
		</invoke-factory>
	</implementation>

</module>