<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
	- Application context definition for Trails Security Through Acegi.
-->


<beans>

	<!--
		- Authentication.
	-->

	<bean id="authenticationManager"
		class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref bean="daoAuthenticationProvider" />
				<ref local="anonymousAuthenticationProvider" />
			</list>
		</property>
	</bean>

	<bean id="daoAuthenticationProvider"
		class="org.acegisecurity.providers.dao.DaoAuthenticationProvider">
		<property name="userDetailsService">
			<ref bean="trailsUserDAO" />
            <!--  ref bean="inMemoryUserDetailsService" /-->
        </property>
	</bean>

    <bean id="trailsUserDAO"
          class="org.trails.security.TrailsUserDAO">
        <property name="persistenceService">
            <ref bean="persistenceService"/>
        </property>
    </bean>


	<bean id="inMemoryUserDetailsService"
		class="org.acegisecurity.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<value>
				user=pwd,ROLE_USER
				admin=admin,ROLE_USER,ROLE_MANAGER
			</value>
		</property>
	</bean>

	<!-- ======================== FILTER CHAIN ======================= -->

	<!--  if you wish to use channel security, add "channelProcessingFilter," in front
		of "httpSessionContextIntegrationFilter" in the list below -->
	<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/**=httpSessionContextIntegrationFilter,authenticationProcessingFilter,anonymousProcessingFilter,securityEnforcementFilter
			</value>
		</property>
	</bean>

	<!-- ===================== HTTP REQUEST SECURITY ==================== -->

	<bean id="securityEnforcementFilter"
		class="org.acegisecurity.intercept.web.SecurityEnforcementFilter">
		<property name="filterSecurityInterceptor">
			<ref local="filterInvocationInterceptor" />
		</property>
		<property name="authenticationEntryPoint">
			<ref local="authenticationProcessingFilterEntryPoint" />
		</property>
	</bean>

   <bean id="authenticationProcessingFilter" 
      class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilter">
      <property name="authenticationManager"><ref bean="authenticationManager"/></property>
      <property name="authenticationFailureUrl"><value>/app?page=Login&amp;service=page</value></property>
      <property name="defaultTargetUrl"><value>/app</value></property>
      <property name="filterProcessesUrl"><value>/j_acegi_security_check</value></property>
      <!-- <property name="rememberMeServices"><ref local="rememberMeServices"/></property>  -->
   </bean>

	<bean id="authenticationProcessingFilterEntryPoint"
		class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
		<property name="loginFormUrl"><value>/app?page=Login&amp;service=page</value></property>
		<property name="forceHttps">
			<value>false</value>
		</property>

	</bean>


	<bean id="anonymousProcessingFilter"
		class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
		<property name="key">
			<value>security</value>
		</property>
		<property name="userAttribute">
			<value>anonymousUser,ROLE_ANONYMOUS</value>
		</property>
	</bean>

	<bean id="anonymousAuthenticationProvider"
		class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
		<property name="key">
			<value>security</value>
		</property>
	</bean>

	<bean id="httpSessionContextIntegrationFilter"
		class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
		<!-- <property name="context">
			<value>
				org.acegisecurity.context.security.SecureContextImpl
			</value>
		</property> -->
	</bean>

	<!-- An access decision voter that reads ROLE_* configuaration settings -->
	<bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter" />

	<bean id="httpRequestAccessDecisionManager"
		class="org.acegisecurity.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions">
			<value>false</value>
		</property>
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
			</list>
		</property>
	</bean>

	<!-- Note the order that entries are placed against the objectDefinitionSource is critical.
		The FilterSecurityInterceptor will work from the top of the list down to the FIRST pattern that matches the request URL.
		Accordingly, you should place MOST SPECIFIC (ie a/b/c/d.*) expressions first, with LEAST SPECIFIC (ie a/.*) expressions last -->
	<bean id="filterInvocationInterceptor"
		class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref local="httpRequestAccessDecisionManager" />
		</property>
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/app?page?login&amp;service?page*=ROLE_ANONYMOUS
				/**/*.gif=ROLE_ANONYMOUS,ROLE_USER
				/**/*.css=ROLE_ANONYMOUS,ROLE_USER
                                /**/*.ico=ROLE_ANONYMOUS,ROLE_USER
				/admin/**=ROLE_MANAGER
				/**=ROLE_USER
			</value>
		</property>
	</bean>

</beans>