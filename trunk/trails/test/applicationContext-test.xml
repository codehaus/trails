<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- ========================= GENERAL DEFINITIONS ========================= -->

	<bean id="hibernateProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location"><value>hibernate.properties</value></property>
	</bean>
		
	<!-- Message source for this context, loaded from localized "messages_xx" files -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename"><value>messagestest</value></property>										
	</bean>
	
	<bean id="trailsMessageSource" class="org.trails.i18n.DefaultTrailsResourceBundleMessageSource">
		<property name="messageSource"><ref local="messageSource"/></property>
	</bean>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<bean id="trailsInterceptor" class="org.trails.hibernate.TrailsInterceptor" />
	
<bean id="sessionFactory"
       class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
  <!--  
  <property name="mappingDirectoryLocations">
    <list>
      <value>classpath:/org/trails/test</value>
    </list>
  </property>-->
  <property name="entityInterceptor">
  	<ref local="trailsInterceptor" />
  </property>
  <property name="configLocation"><value>hibernate.cfg.xml</value></property> 
  	<property name="configurationClass">
   		<value>org.hibernate.cfg.AnnotationConfiguration</value>
	</property> 
  <property name="hibernateProperties">
  	<ref local="hibernateProperties"/>
  <!-- 
    <props>
      <prop key="hibernate.dialect">
        ${hibernate.dialect}
      </prop>
      <prop key="hibernate.show_sql">
        true
      </prop>
      <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
      <prop key="hibernate.connection.driver_class">${jdbc.driver}</prop>
      <prop key="hibernate.connection.url">${jdbc.url}</prop>
      <prop key="hibernate.connection.username">${jdbc.userid}</prop>
      <prop key="hibernate.connection.password">${jdbc.password}</prop>
      
    </props>
    -->
  </property>
</bean>  

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	
	<bean id="persistenceServiceTarget" class="org.trails.hibernate.HibernatePersistenceService">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	
	<bean id="persistenceService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager"><ref local="transactionManager"/></property>
		<property name="target"><ref local="persistenceServiceTarget"/></property>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="load*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="remove*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
		<!-- <property name="preInterceptors">
		    <list>
		        <ref local="persistenceValidationAdvisor"/>
		        
		    </list>
		</property> -->
	</bean>
	
	<bean id="descriptorService" class="org.trails.descriptor.TrailsDescriptorService" init-method="init">
		<property name="types">
			<bean id="persistenceService.allTypes"
          		class="org.springframework.beans.factory.config.PropertyPathFactoryBean"/>
		</property>
		<property name="methodExcludes">
			<list>
				<value>shouldExclude</value>
				<value>set.*</value>
				<value>get.*</value>
				<value>is.*</value>
				<value>equals</value>
				<value>toString</value>
			</list>
		</property>
		<property name="propertyExcludes">
			<list>
				<value>exclude.*</value>
				<value>class</value>
			</list>
		</property>
		<property name="decorators">
			<list>
				<ref local="hibernateDescriptorDecorator" />
			</list>
		</property>
	</bean>

	<bean id="hibernateDescriptorDecorator" class="org.trails.hibernate.HibernateDescriptorDecorator" singleton="true">
		<property name="localSessionFactoryBean"> <ref bean="&amp;sessionFactory" /></property>
	</bean>

<!--  
	<bean id="persistenceValidationAdvice" class="org.trails.hibernate.HibernatePersistenceValidationAdvice" />
	<bean id="persistenceValidationAdvisor" 
	    class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
	    <property name="advice">
	        <ref local="persistenceValidationAdvice"/>
	    </property>
	    <property name="patterns">
	        <list>
	            <value>.*save</value>
	        </list>
	    </property>
	</bean>	
-->

	<bean id="editorService" class="org.trails.descriptor.TrailsEditorService">
		<property name="editorMap">
			<map>
				<entry>
				<key><value>readOnly</value></key>
				<bean class="org.apache.tapestry.util.ComponentAddress">
					<constructor-arg index="0"><value>trails:Editors</value></constructor-arg>
					<constructor-arg index="1"><value>readOnly</value></constructor-arg>
				</bean>
				</entry>
				<entry>
				<key><value>string</value></key>
				<bean class="org.apache.tapestry.util.ComponentAddress">
					<constructor-arg index="0"><value>trails:Editors</value></constructor-arg>
					<constructor-arg index="1"><value>stringEditor</value></constructor-arg>
				</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- security service bean -->
	<bean id="securityService" class="org.trails.security.TrailsSecurityService"/>

	<bean id="validateUniqueAspect" class="org.trails.validation.ValidateUniqueAspect" factory-method="aspectOf">
		<property name="descriptorService"><ref local="descriptorService" /></property>
		<property name="persistenceService"><ref local="persistenceService" /></property>
	</bean>
	
	<bean id="descriptorInternationalizationAspect" class="org.trails.i18n.DescriptorInternationalization" factory-method="aspectOf">
		<property name="resourceBundleMessageSource"><ref local="trailsMessageSource"/></property>
	</bean>

	<bean id="descriptorSecurity" class="org.trails.security.DescriptorSecurity" factory-method="aspectOf">
		<property name="securityService"><ref bean="securityService"/></property>
	</bean>
	

		
</beans>
